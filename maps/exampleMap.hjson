{
    songName: Anuke - Boss 1
    music: boss1
    bpm: 100.0
    beatOffset: 0.0
    maxHits: 10
    copperAmount: 8
    fadeColor: "fa874c"
    alwaysUnlocked: true
    drawPixel: [
        # Draw spore background
        {type: "MixColor", name: "c1", col1: "#7c4b80", col2: "#6b4474", factor: "sin(state_time) / 2 + 0.5"}
        {type: "MixColor", name: "c2", col1: "#7c4b80", col2: "#6b4474", factor: "cos(state_time) / 2 + 0.5"}
        {type: "DrawStripes", col1: "c1", col2: "c2"}
        {type: "DrawBeatSquare", "col": "#f25555"}
        
        # Draw space
        {type: "Turns", fromTurn: 24, toTurn: 31, progress: "fac", body: [
            # {type: "MixColor", name: "c3", col1: "#00000000", col2: "#0000007f", factor: "min(1, max(0, (state_turn - state_moveBeat - 24) / 8))"}
            # {type: "MixColor", name: "c3", col1: "c3", col2: "#ff00007f", factor: "(state_turn >= 32) * state_moveBeat ^ 2"}
            {type: "MixColor", name: "c3", col1: "#00000000", col2: "#ff00007f", factor: "fac"}
            {type: "DrawSpace", "col": "c3"}
        ]}
        {type: "Turns", fromTurn: 32, body: [
            # {type: "Condition", condition: "state_turn % 3 == 0"}
            {type: "MixColor", name: "c3", col1: "#ff00007f", col2: "#ffff007f", factor: "state_moveBeat ^ 2", mode: "mix"}
            {type: "DrawSpace", "col": "c3"}
        ]}
        
        # Draw spore storm
        {type: "DrawFlame", col1: "#7457ce", col2: "#7457ce", "time": "state_time"}

        # Draw Crux symbol
        // {type: "DrawShape", wrap: true, stroke: "px(1)", color: "#ff0000", points: ["vec2(0, 2.8)", "vec2(0.7, 2.1)", "vec2(0.7, 2.8)", "vec2(1.5, 2)", "vec2(1.5, 1.3)", "vec2(1.9, 0.9)", "vec2(0, -1)", "vec2(-0.3, -0.7)", "vec2(-0.3, 0)", "vec2(-1.1, 0.8)", "vec2(-1.1, 0.1)", "vec2(-1.9, 0.9)"]}
        // {type: "DrawShape", wrap: true, stroke: "px(1)", color: "#ff0000", points: ["vec2(0, -2)", "vec2(2.4, 0.4)", "vec2(2.4, -0.4)", "vec2(0, -2.8)", "vec2(-1, -1.8)", "vec2(-1, -2.7)", "vec2(-1.8, -1.9)", "vec2(-1.8, -1)", "vec2(-2.4, -0.4)", "vec2(-2.4, 0.4)"]}
    ],
    draw: [
        {type: "DrawTilesSquare", col2: "colorRed"}
    ],
    update: [
        {type: "Condition", condition: "state_newTurn", then: [
            {type: "Turns", "fromTurn": 4, toTurn: "4 + mapSize * 2", interval: 1, body: [
                {type: "EffectWarn", pos: "vec2(state_turn - 4 - mapSize, 0)", life: "beatSpacing"}
                {type: "MakeDelay", "callback": [
                    {type: "MakeBulletCircle", pos: "vec2(state_turn - 4 - mapSize, 0)"}
                ]}
            ]}
        ]}
    ]
}